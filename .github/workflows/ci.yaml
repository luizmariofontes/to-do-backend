name: Backend CI/CD

on:
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Criar arquivo Docker Compose para testes
        run: |
          cat <<EOF > docker-compose.test.yml
          version: '3.8'
          services:
            db_test:
              image: postgres:16-alpine
              container_name: db_test_container
              networks:
                - project-network
              environment:
                - POSTGRES_DB=test_db
                - POSTGRES_USER=test_user
                - POSTGRES_PASSWORD=test_password
              healthcheck:
                test: ["CMD-SHELL", "pg_isready -U test_user -d test_db"]
                interval: 5s
                timeout: 5s
                retries: 5

            backend_test:
              build: .
              container_name: backend_test_container
              networks:
                - project-network
              command: tail -f /dev/null
              environment:
                - DATABASE_URL=postgresql://test_user:test_password@db_test:5432/test_db
              depends_on:
                db_test:
                  condition: service_healthy

          networks:
            project-network:
          EOF

      - name: Iniciar os serviços em segundo plano
        run: docker compose -f docker-compose.test.yml up --build -d

      - name: Rodar os testes no contêiner do backend
        run: docker compose -f docker-compose.test.yml exec -T backend_test pytest

      - name: Limpar ambiente de teste
        if: always()
        run: docker compose -f docker-compose.test.yml down

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Login no Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build e Push da imagem Docker
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            luizmario/to-do-backend:latest
            luizmario/to-do-backend:${{ github.sha }}
